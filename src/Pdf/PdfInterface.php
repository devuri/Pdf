<?php/* * This file is part of the UCSDMath package. * * (c) UCSD Mathematics | Math Computing Support <mathhelp@math.ucsd.edu> * * For the full copyright and license information, please view the LICENSE * file that was distributed with this source code. */namespace UCSDMath\Pdf;/** * PdfInterface is the interface implemented by all Pdf classes. * * @author Daryl Eisner <deisner@ucsd.edu> */interface PdfInterface{    /**     * Constants.     *     * @const string DEFAULT_CHARSET           A default charater setting     * @const string DEFAULT_PAGE_SIZE         A default page size     * @const string DEFAULT_PAGE_ORIENTATION  A default page orientation     */    const DEFAULT_CHARSET = 'UTF-8';    const DEFAULT_PAGE_SIZE = 'Letter';    const DEFAULT_PAGE_ORIENTATION = 'Portrait';    /**     * Set the document metadata Creator.     *     * @param string $str  A document Creator name     *     * @return PdfInterface     *     * @api     */    public function setMetaCreator($str = null);    /**     * Set the document metadata Subject.     *     * @param string $str  A document subject or description     *     * @return PdfInterface     *     * @api     */    public function setMetaSubject($str = null);    /**     * Set the document metadata Title.     *     * @param string $str  A document Title     *     * @return PdfInterface     *     * @api     */    public function setMetaTitle($str = null);    /**     * Set the document metadata Author.     *     * @param string $str  A document Author name     *     * @return PdfInterface     *     * @api     */    public function setMetaAuthor($str = null);    /**     * Set keywords (metadata) for the document.     *     * @param array $words  A list of keywords that describe the PDF     *     * @return PdfInterface     *     * @api     */    public function setMetaKeywords(array $words = null);    /**     * Set the footer page margin.     *     * @param int $marginFooter  A footer page margin     *     * @return PdfInterface     *     * @api     */    public function setMarginFooter($marginFooter = null);    /**     * Set the header page margin.     *     * @param int $marginHeader  A header page margin     *     * @return PdfInterface     *     * @api     */    public function setMarginHeader($marginHeader = null);    /**     * Set the left page margin.     *     * @param int $marginLeft  A left page margin     *     * @return PdfInterface     *     * @api     */    public function setMarginLeft($marginLeft = null);    /**     * Set the bottom page margin.     *     * @param int $marginBottom  A bottom page margin     *     * @return PdfInterface     *     * @api     */    public function setMarginBottom($marginBottom = null);    /**     * Set the right page margin.     *     * @param int $marginRight  A right page margin     *     * @return PdfInterface     *     * @api     */    public function setMarginRight($marginRight = null);    /**     * Set the top page margin.     *     * @param int $marginTop  A top page margin     *     * @return PdfInterface     *     * @api     */    public function setMarginTop($marginTop = null);    /**     * Set the page margins.     *     * @param int $marginTop     A top page margin     * @param int $marginRight   A right page margin     * @param int $marginBottom  A bottom page margin     * @param int $marginLeft    A left page margin     * @param int $marginHeader  A header page margin     * @param int $marginFooter  A footer page margin     *     * @return PdfInterface     *     * @api     */    public function setMargins(        $marginTop    = null,        $marginRight  = null,        $marginBottom = null,        $marginLeft   = null,        $marginHeader = null,        $marginFooter = null    );    /**     * Set the default document font type.     *     * @param string $fontType  A font type ('Times','Helvetica','Courier')     *     * @return PdfInterface     *     * @api     */    public function setFontTypeface($fontType = null);    /**     * Set the default font size.     *     * @param int $size  A font size (pt.)     *     * @return PdfInterface     *     * @api     */    public function setFontSize($size = null);    /**     * Set the page size to letter.     *     * @return PdfInterface     *     * @api     */    public function setPaperSizeLetter();    /**     * Set the page size to legal.     *     * @return PdfInterface     *     * @api     */    public function setPaperSizeLegal();    /**     * Set the page size.     *     * @param string $format  A page format type ['Letter','Legal', etc.]     *     * @return PdfInterface     *     * @api     */    public function setPaperSize($paperSize = null);    /**     * Initialization (Singleton Pattern).     *     * @static     *     * @return PdfInterface     *     * @api     */    public static function init();    /**     * Returns instance count.     *     * @static     *     * @return integer     *     * @api     */    public static function getInstanceCount();    /**     * Append a CSS style.     *     * @param string $str  A string data used for render     *     * @return PdfInterface     *     * @api     */    public function appendPageCSS($str);    /**     * Append the HTML content.     *     * @param string $str  A string data used for render     *     * @return PdfInterface     *     * @api     */    public function appendPageContent($str);    /**     * Set the page orientation to landscape.     *     * @return PdfInterface     *     * @api     */    public function setPageAsLandscape();    /**     * Set the page orientation to portrait.     *     * @return PdfInterface     *     * @api     */    public function setPageAsPortrait();}